"""
Django settings for site_TFM project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ct00xjizk(-o!torlxai8*-^%eyxcux-_94e)dmjifyljmmo6y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'criar_aluno',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'site_TFM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'site_TFM.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': { # Banco no postgreSQL
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
       'NAME': 'DB_LMS',
        'USER': 'postgres',
        'PASSWORD': 'LMS_GP_Draco',
        'HOST': 'localhost',
        'PORT': '8000'
    },

    ## Config Ainda incompleta ##
    #'default': { # Banco no MSSQL
    #    'ENGINE': "sqlserver_ado",
    #    'HOST': "draco-server.database.windows.net",
    #    'USER': "lms_draco_admin",
    #    'PASSWORD': "Dr@c0_gr0up",
    #    'NAME': "DB_LMS_MSSQL",
    #    'PORT': '1433',
    #    'OPTIONS':{
    #       'host_is_server': True,
    #       'driver': 'FreeTDS'       
    #     }
    #},


    #'default': { # Banco de testes sqlite 
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    #}
}

'''passos e comandos inatall mssql-azure
1 - ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
2 - brew install unixodbc
    brew install freetds --with-unixodbc
3 - open /usr/local/etc/odbcinst.ini
4 - Copy this and paste it in odbcinst.ini.
        [FreeTDS]
        Description = TD Driver (MSSQL)
        Driver = /usr/local/lib/libtdsodbc.so
        Setup = /usr/local/lib/libtdsodbc.so
        FileUsage = 1
5 - sudo pip install django-pyodbc-azure
6 - git clone https://github.com/Azure/azure-sql-database-samples.git
7 - cd into the azure-sql-database-samples/Django/Django-pyodbc-azure folder
8 - python setup.py servername datbasename username password
9 - DATABASES = {
        'default': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': databasename',
        'USER': ‘username@servername',
        'PASSWORD': ‘password',
        'HOST': ‘servername.database.windows.net',
        'PORT': '1433',
        'OPTIONS': {
            'host_is_server': True,
            'driver': 'FreeTDS'
                },
        },
    }
10 - python manage.py migrate
11 - python manage.py runserver
'''

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
